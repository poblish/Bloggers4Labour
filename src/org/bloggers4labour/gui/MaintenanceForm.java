/*
 * MaintenanceForm.java
 *
 * Created on May 18, 2005, 9:15 PM
 */

package org.bloggers4labour.gui;

import com.hiatus.UDates;
import de.nava.informa.core.ItemIF;
import de.nava.informa.impl.basic.Item;
import org.bloggers4labour.feed.FeedList;
import org.bloggers4labour.jsp.DisplayItem;
import java.util.List;
import org.bloggers4labour.*;
import org.bloggers4labour.index.IndexMgr;
import org.bloggers4labour.jmx.Stats;
import org.bloggers4labour.opml.OPMLGenerator;
import org.bloggers4labour.tag.Link;

/**
 *
 * @author  andrewre
 */
public class MaintenanceForm extends javax.swing.JFrame
{
	private transient Launcher	m_Launcher;	// (AGR) 3 Feb 2007. FindBugs made me make this transient

	/** Creates new form MaintenanceForm */
	public MaintenanceForm()
	{
		initComponents();
	}
	
	/** This method is called from within the constructor to
	 * initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is
	 * always regenerated by the Form Editor.
	 */
        // <editor-fold defaultstate="collapsed" desc=" Generated Code ">//GEN-BEGIN:initComponents
        private void initComponents()
        {
                java.awt.GridBagConstraints gridBagConstraints;

                m_CommandsPane = new javax.swing.JTabbedPane();
                m_FeedGenPanel = new javax.swing.JPanel();
                jLabel1 = new javax.swing.JLabel();
                m_FeedExecutionCount = new javax.swing.JTextField();
                m_OPMLGenPanel = new javax.swing.JPanel();
                jLabel2 = new javax.swing.JLabel();
                m_OPMLExecutionCount = new javax.swing.JTextField();
                m_StartStopPanel = new javax.swing.JPanel();
                m_StartAppButton = new javax.swing.JButton();
                m_StopAppButton = new javax.swing.JButton();
                m_RebootAppButton = new javax.swing.JButton();
                m_GetLinksPanel = new javax.swing.JPanel();
                m_LinksByNameButton = new javax.swing.JButton();
                m_LinksByURLButton = new javax.swing.JButton();
                m_IndexPanel = new javax.swing.JPanel();
                m_QueryText = new javax.swing.JTextField();
                m_RunQuery = new javax.swing.JButton();
                m_HeadlinesPanel = new javax.swing.JPanel();
                m_Install = new javax.swing.JComboBox();
                m_HeadlinesType = new javax.swing.JComboBox();
                m_Generate = new javax.swing.JButton();
                m_ExecuteButton = new javax.swing.JButton();

                getContentPane().setLayout(new java.awt.GridBagLayout());

                setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
                setTitle("Maintenance Form");
                setName("Maintenance Form");
                addWindowListener(new java.awt.event.WindowAdapter()
                {
                        public void windowClosing(java.awt.event.WindowEvent evt)
                        {
                                formWindowClosing(evt);
                        }
                        public void windowActivated(java.awt.event.WindowEvent evt)
                        {
                                formWindowActivated(evt);
                        }
                });

                m_CommandsPane.setMinimumSize(new java.awt.Dimension(400, 250));
                m_CommandsPane.setName("commandsPane");
                m_CommandsPane.setPreferredSize(new java.awt.Dimension(186, 99));
                m_FeedGenPanel.setMinimumSize(new java.awt.Dimension(400, 250));
                jLabel1.setText("How many times?");
                m_FeedGenPanel.add(jLabel1);

                m_FeedExecutionCount.setText("5");
                m_FeedExecutionCount.setPreferredSize(new java.awt.Dimension(40, 22));
                m_FeedExecutionCount.addActionListener(new java.awt.event.ActionListener()
                {
                        public void actionPerformed(java.awt.event.ActionEvent evt)
                        {
                                m_FeedExecutionCountActionPerformed(evt);
                        }
                });

                m_FeedGenPanel.add(m_FeedExecutionCount);

                m_CommandsPane.addTab("Feed Generation", m_FeedGenPanel);

                m_OPMLGenPanel.setMinimumSize(new java.awt.Dimension(400, 250));
                jLabel2.setText("How many times?");
                m_OPMLGenPanel.add(jLabel2);

                m_OPMLExecutionCount.setText("5");
                m_OPMLExecutionCount.setPreferredSize(new java.awt.Dimension(40, 22));
                m_OPMLGenPanel.add(m_OPMLExecutionCount);

                m_CommandsPane.addTab("OPML", m_OPMLGenPanel);

                m_StartAppButton.setText("Start B4L");
                m_StartAppButton.addActionListener(new java.awt.event.ActionListener()
                {
                        public void actionPerformed(java.awt.event.ActionEvent evt)
                        {
                                startAppButtonActionPerformed(evt);
                        }
                });

                m_StartStopPanel.add(m_StartAppButton);

                m_StopAppButton.setText("Stop B4L");
                m_StopAppButton.addActionListener(new java.awt.event.ActionListener()
                {
                        public void actionPerformed(java.awt.event.ActionEvent evt)
                        {
                                stopAppButtonActionPerformed(evt);
                        }
                });

                m_StartStopPanel.add(m_StopAppButton);

                m_RebootAppButton.setText("Reboot B4L");
                m_RebootAppButton.addActionListener(new java.awt.event.ActionListener()
                {
                        public void actionPerformed(java.awt.event.ActionEvent evt)
                        {
                                rebootAppButtonActionPerformed(evt);
                        }
                });

                m_StartStopPanel.add(m_RebootAppButton);

                m_CommandsPane.addTab("Start & Stop", m_StartStopPanel);

                m_LinksByNameButton.setText("Get Links by Name");
                m_LinksByNameButton.addActionListener(new java.awt.event.ActionListener()
                {
                        public void actionPerformed(java.awt.event.ActionEvent evt)
                        {
                                linksByNameButtonActionPerformed(evt);
                        }
                });

                m_GetLinksPanel.add(m_LinksByNameButton);

                m_LinksByURLButton.setText("Get Links by URL");
                m_LinksByURLButton.addActionListener(new java.awt.event.ActionListener()
                {
                        public void actionPerformed(java.awt.event.ActionEvent evt)
                        {
                                linksByURLButtonActionPerformed(evt);
                        }
                });

                m_GetLinksPanel.add(m_LinksByURLButton);

                m_CommandsPane.addTab("Links", m_GetLinksPanel);

                m_QueryText.setText("jTextField1");
                m_QueryText.setPreferredSize(new java.awt.Dimension(200, 22));
                m_IndexPanel.add(m_QueryText);

                m_RunQuery.setText("Search");
                m_RunQuery.addActionListener(new java.awt.event.ActionListener()
                {
                        public void actionPerformed(java.awt.event.ActionEvent evt)
                        {
                                m_RunQueryActionPerformed(evt);
                        }
                });

                m_IndexPanel.add(m_RunQuery);

                m_CommandsPane.addTab("Index", m_IndexPanel);

                for ( String xx : InstallationManager.getInstance().getInstallationNames())
                {
                        m_Install.addItem(xx);
                }
                m_HeadlinesPanel.add(m_Install);

                m_HeadlinesType.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Last 24 hours", "Recent Posts", "councillors" }));
                m_HeadlinesPanel.add(m_HeadlinesType);

                m_Generate.setText("Generate");
                m_Generate.addActionListener(new java.awt.event.ActionListener()
                {
                        public void actionPerformed(java.awt.event.ActionEvent evt)
                        {
                                m_GenerateActionPerformed(evt);
                        }
                });

                m_HeadlinesPanel.add(m_Generate);

                m_CommandsPane.addTab("Headlines", m_HeadlinesPanel);

                gridBagConstraints = new java.awt.GridBagConstraints();
                gridBagConstraints.gridx = 0;
                gridBagConstraints.gridy = 0;
                gridBagConstraints.gridwidth = java.awt.GridBagConstraints.REMAINDER;
                gridBagConstraints.gridheight = 25;
                gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
                gridBagConstraints.ipadx = 4;
                gridBagConstraints.weightx = 1.0;
                gridBagConstraints.weighty = 1.0;
                gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
                getContentPane().add(m_CommandsPane, gridBagConstraints);

                m_ExecuteButton.setActionCommand("executeButton");
                m_ExecuteButton.setLabel("Run Command");
                m_ExecuteButton.addActionListener(new java.awt.event.ActionListener()
                {
                        public void actionPerformed(java.awt.event.ActionEvent evt)
                        {
                                executeButtonActionPerformed(evt);
                        }
                });

                gridBagConstraints = new java.awt.GridBagConstraints();
                gridBagConstraints.gridx = 25;
                gridBagConstraints.gridy = 25;
                gridBagConstraints.insets = new java.awt.Insets(10, 0, 10, 10);
                getContentPane().add(m_ExecuteButton, gridBagConstraints);

                java.awt.Dimension screenSize = java.awt.Toolkit.getDefaultToolkit().getScreenSize();
                setBounds((screenSize.width-539)/2, (screenSize.height-242)/2, 539, 242);
        }// </editor-fold>//GEN-END:initComponents

	private void m_GenerateActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_m_GenerateActionPerformed
	{//GEN-HEADEREND:event_m_GenerateActionPerformed
		InstallationIF	theInstall = InstallationManager.getInstallation((String) m_Install.getSelectedItem() );
		HeadlinesMgr	hMgr = theInstall.getHeadlinesMgr();
		Headlines	theHeads;
		int		theSelection = m_HeadlinesType.getSelectedIndex();

		// System.out.println(theSelection);

		switch (theSelection)
		{
			case 0:
				theHeads = hMgr.get24HourInstance();
				break;
			case 1:
			default:
				theHeads = hMgr.getRecentPostsInstance();
				break;
			case 2:
				theHeads = hMgr.findHeadlines((String) m_HeadlinesType.getSelectedItem() );
				// System.out.println("theHeads = " + theHeads);
				break;
		}

		////////////////////////////////////////////////////////////////

		ItemIF[]	headlineItemsArray = theHeads.toArray();
		DisplayItem	di;
		long		currentTimeMSecs = System.currentTimeMillis();

		for ( int z = 0; z < headlineItemsArray.length; z++)
		{
			di = new DisplayItem( theInstall, (Item) headlineItemsArray[z], currentTimeMSecs);

			System.out.println("[" + z + "]: \"" + di.getDispTitle() + "\" from: " + di.getSiteURL());
		}

		FeedList	flst = theInstall.getFeedList();
		Site		theSite = flst.lookup(144);
		de.nava.informa.core.ChannelIF	channel = theSite.getChannel();

		System.out.println("==> " + channel.getItems());

		headlineItemsArray = null;
	}//GEN-LAST:event_m_GenerateActionPerformed

	private void m_RunQueryActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_m_RunQueryActionPerformed
	{//GEN-HEADEREND:event_m_RunQueryActionPerformed
		new Thread( new Runnable()
			    {
				public void run()
				{
					InstallationIF	theInstall = InstallationManager.getDefaultInstallation();

					theInstall.getIndexMgr().runQuery( m_QueryText.getText() );
				}
			    }
			).start();
	}//GEN-LAST:event_m_RunQueryActionPerformed

	private void executeButtonActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_executeButtonActionPerformed
	{//GEN-HEADEREND:event_executeButtonActionPerformed
		int	theTabIndex = m_CommandsPane.getSelectedIndex();
		long	theStartMS;

		// System.out.println("version: " + System.getProperty("java.version"));

		if ( theTabIndex == 0)
		{
			int		theCount = Integer.parseInt( m_FeedExecutionCount.getText() );
			InstallationIF	theInstall = InstallationManager.getDefaultInstallation();
			Stats		theStats = theInstall.getManagement().getStats();
			Headlines	theH = theInstall.getHeadlinesMgr().getMainRSSFeedInstance();

			System.out.println("Generating the News Feed " + theCount + " times...");
			theStartMS = System.currentTimeMillis();

			for ( int i = 0; i < theCount; i++)
			{
				theH.publishSnapshot(theStats);
				// theH.publishSnapshot_Included( theH.toArray(), "kjhsdkhkeh324");
			}

			System.out.println("DONE in " + UDates.getFormattedTimeDiff( System.currentTimeMillis() - theStartMS));
		}
		else if ( theTabIndex == 1)
		{
			int		theCount = Integer.parseInt( m_FeedExecutionCount.getText() );
			FeedList	theFL = InstallationManager.getDefaultInstallation().getFeedList();

			System.out.println("Generating the OPML Feed " + theCount + " times, using " + theFL + "...");
			theStartMS = System.currentTimeMillis();

			for ( int i = 0; i < theCount; i++)
			{
				theFL.generateOPML();
			}

			System.out.println("DONE in " + UDates.getFormattedTimeDiff( System.currentTimeMillis() - theStartMS));
		}
	}//GEN-LAST:event_executeButtonActionPerformed

	private void rebootAppButtonActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_rebootAppButtonActionPerformed
	{//GEN-HEADEREND:event_rebootAppButtonActionPerformed
		if ( m_Launcher != null)
		{
			m_Launcher.reboot();
		}
	}//GEN-LAST:event_rebootAppButtonActionPerformed

	private void stopAppButtonActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_stopAppButtonActionPerformed
	{//GEN-HEADEREND:event_stopAppButtonActionPerformed
		if ( m_Launcher != null)
		{
			m_Launcher.stop();
		}
	}//GEN-LAST:event_stopAppButtonActionPerformed

	private void startAppButtonActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_startAppButtonActionPerformed
	{//GEN-HEADEREND:event_startAppButtonActionPerformed
		if ( m_Launcher != null)
		{
			m_Launcher.restart();
		}
	}//GEN-LAST:event_startAppButtonActionPerformed

	private void linksByNameButtonActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_linksByNameButtonActionPerformed
	{//GEN-HEADEREND:event_linksByNameButtonActionPerformed
		InstallationIF	theInstall = InstallationManager.getDefaultInstallation();
		Headlines	h = theInstall.getHeadlinesMgr().getRecentPostsInstance();
		List<Link>	ll = h.getLinksByName();

		System.out.println("Links by Name...");

		for ( Link l : ll)
		{
			System.out.println("Link " + l + " from " + l.getSource());
		}
	}//GEN-LAST:event_linksByNameButtonActionPerformed

	private void linksByURLButtonActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_linksByURLButtonActionPerformed
	{//GEN-HEADEREND:event_linksByURLButtonActionPerformed
		InstallationIF	theInstall = InstallationManager.getDefaultInstallation();
		Headlines	h = theInstall.getHeadlinesMgr().getRecentPostsInstance();
		List<Link>	ll = h.getLinksByURL();

		System.out.println("Links by URL...");

		for ( Link l : ll)
		{
			System.out.println("Link " + l + " from " + l.getSource());
		}
	}//GEN-LAST:event_linksByURLButtonActionPerformed

	private void formWindowActivated(java.awt.event.WindowEvent evt)//GEN-FIRST:event_formWindowActivated
	{//GEN-HEADEREND:event_formWindowActivated
// TODO add your handling code here:
	}//GEN-LAST:event_formWindowActivated

	private void formWindowClosing(java.awt.event.WindowEvent evt)//GEN-FIRST:event_formWindowClosing
	{//GEN-HEADEREND:event_formWindowClosing
		if ( m_Launcher != null)
		{
			m_Launcher.stop();
		}
	}//GEN-LAST:event_formWindowClosing

	private void m_FeedExecutionCountActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_m_FeedExecutionCountActionPerformed
	{//GEN-HEADEREND:event_m_FeedExecutionCountActionPerformed

	}//GEN-LAST:event_m_FeedExecutionCountActionPerformed
	
	/**
	 * @param args the command line arguments
	 */
	public static void main(String args[])
	{
		java.awt.EventQueue.invokeLater(new Runnable()
		{
			public void run()
			{
				new MaintenanceForm().setVisible(true);
			}
		});
	}

	public void setLauncher( Launcher inL)
	{
		m_Launcher = inL;
	}

        // Variables declaration - do not modify//GEN-BEGIN:variables
        private javax.swing.JLabel jLabel1;
        private javax.swing.JLabel jLabel2;
        private javax.swing.JTabbedPane m_CommandsPane;
        private javax.swing.JButton m_ExecuteButton;
        private javax.swing.JTextField m_FeedExecutionCount;
        private javax.swing.JPanel m_FeedGenPanel;
        private javax.swing.JButton m_Generate;
        private javax.swing.JPanel m_GetLinksPanel;
        private javax.swing.JPanel m_HeadlinesPanel;
        private javax.swing.JComboBox m_HeadlinesType;
        private javax.swing.JPanel m_IndexPanel;
        private javax.swing.JComboBox m_Install;
        private javax.swing.JButton m_LinksByNameButton;
        private javax.swing.JButton m_LinksByURLButton;
        private javax.swing.JTextField m_OPMLExecutionCount;
        private javax.swing.JPanel m_OPMLGenPanel;
        private javax.swing.JTextField m_QueryText;
        private javax.swing.JButton m_RebootAppButton;
        private javax.swing.JButton m_RunQuery;
        private javax.swing.JButton m_StartAppButton;
        private javax.swing.JPanel m_StartStopPanel;
        private javax.swing.JButton m_StopAppButton;
        // End of variables declaration//GEN-END:variables
	
}
